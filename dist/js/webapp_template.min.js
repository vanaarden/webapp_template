/*! webapp_template 08-01-2018 */

function init(){for(var t=0;t<totalPaints;t++)addPaint();setInterval(update,40)}function drawPaint(t,i,n,a){ctx.beginPath(),ctx.arc(t,i,n,0,2*Math.PI,!0),ctx.closePath(),ctx.fillStyle=a,ctx.fill()}function update(){for(var t=0;t<paint.length;t++)paint[t].y=paint[t].y+paint[t].v,paint[t].y>height+60&&(paint.splice(t,1),addPaint()),drawPaint(paint[t].x,paint[t].y,paint[t].s,paint[t].c)}function addPaint(){for(var t=50;t>0;){size=Math.random()*size+10,x=Math.random()*width,found=!1;for(var i=0;i<paint.length;i++){if(x+size>paint[i].x&&x-size<paint[i].x+paint[i].s){found=!0;break}if(x-size<paint[i].x&&x+size>paint[i].x-paint[i].s){found=!0;break}}if(0==found)return paint.push({s:size,x:x,y:-60,v:2*Math.random()+2,c:"#"+(3223857*Math.random()+11184810|0).toString(16)}),void t--}}module.exports=function(t){t.initConfig({pkg:t.file.readJSON("package.json"),cssmin:{minify:{src:"reset.css",dest:"dist/css/style-min.css"}},uglify:{options:{banner:'/*! <%= pkg.name %> <%= grunt.template.today("dd-mm-yyyy") %> */\n'},build:{src:"*.js",dest:"dist/js/<%= pkg.name %>.min.js"}},babel:{options:{sourceMap:!0,presets:["env"]},dist:{files:{"dist/app.js":"script.js"}}}}),t.loadNpmTasks("grunt-contrib-cssmin"),t.loadNpmTasks("grunt-contrib-uglify"),t.loadNpmTasks("grunt-babel"),t.loadNpmTasks("grunt-browserify"),t.registerTask("default",["babel"])};var width=window.innerWidth,height=window.innerHeight,c=document.getElementById("c"),ctx=c.getContext("2d");c.width=width,c.height=height;var paint=[],totalPaints=width/50,size=20;init();